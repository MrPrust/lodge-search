

.search-widget {
    border-style: solid;
    border-width: 1px;
    border-color: #ffffff;
    background: #c6e2c5;
    font-size: 11px;
    text-align: left;
    font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif;
    color: #ffffff;
    overflow: hidden; 
}


.search-widget .search-widget-inner {
    float: center;
}

.search-widget div,
.search-widget ul,
.search-widget li,
.search-widget form,
.search-widget label {
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    font-size: 100%;
    vertical-align: baseline;
    background: transparent;
}

.search-widget ul,
.search-widget li {
    list-style: none;
}

.search-widget label {
    display: block;
    margin-bottom: 10px;
    margin-left: 5px;
    overflow: hidden; 
}

.search-widget input.textbox,
.search-widget select {
    font-family: Tahoma, Verdana, Arial, raleway, sans-serif;
    font-size: 1.2em !important;
    color: #000000;
    border: 1px solid #d7d6d5;
    background: #ffffff url("https://www.travelnow.com/templates/467492/static/0/default/images/widgets/searchwidget/control-bg.jpg") repeat-x left top;
    margin: 0 0 9px 0; 
    width: 100%; 
    padding: 1px;
}


.search-widget input.checkbox,
.search-widget input.radio {
    margin: 0 5px 0 2px;
    padding: 0;
    height: 14px;
    width: 14px;
    border: none;
}

.search-widget .button-block {
    clear: ; 
}

.search-widget button {
    font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif;
    padding: 12px 9px !important;
    margin: 0 !important;
    cursor: pointer;
    background: #006200;
    border: 1px solid #d7d6d5 !important;
    color: #ffffff;
    font-weight: bold;
    font-size: 1.25em;
    border-radius: 5px;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    -khtml-border-radius: 5px;
    width: auto;
    overflow: visible; 
    display: inline-block;
}

.search-widget button:hover,
.search-widget button:focus {
    background: #006200;
    color: #ffffff;
}

/* Destination section */
.search-widget .destination-block {
    padding-right: 13px;
}

.search-widget .destination-block input {
    width: 100%;
}

.search-widget .check-in-block,
.search-widget .check-out-block,
.search-widget .rooms-block,
.search-widget .adults-block,
.search-widget .children-block,
.search-widget .hotel-chains-block,
.search-widget .star-rating-block {
    float: left;
}

.search-widget .check-in-block,
.search-widget .hotel-chains-block {
    clear: both;
}

.search-widget .calendar-icon {
    background: url("https://www.travelnow.com/templates/467492/static/16/default/images/widgets/searchwidget/ico-calendar.png") right top no-repeat;
    width: 21px;
    height: 22px;
    float: right;
    cursor: pointer;
}

.search-widget .reset-dates-block {
    clear: both;
    white-space: nowrap;
    overflow: hidden;
}

.search-widget .reset-dates-block label {
    display: inline-block;
    vertical-align: top;
    margin-bottom: 6px;
}

    #check-inDialogContainer .bd form {
        clear:left;
    }

    #check-inDialogContainer .bd {
        padding:0;
    }

    #check-inDialogContainer .hd {
        text-align:left;
    }

    #check-inDialogContainer .ft .button-group {
        text-align:center;
    }


    #check-inDialogContainer.yui-overlay-hidden table {
        *display:none;
    }

    #check-inContainerCalendar {
        border:none;
        padding:1em;
    }
   
    #check-outDialogContainer .bd form {
        clear:left;
    }

    #check-outDialogContainer .bd {
        padding:0;
    }

    #check-outDialogContainer .hd {
        text-align:left;
    }

    #check-outDialogContainer .ft .button-group {
        text-align:center;
    }

    #check-outDialogContainer.yui-overlay-hidden table {
        *display:none;
    }

    #check-outContainerCalendar {
        border:none;
        padding:1em;
    }

.size420x348A {
    width: 450px;
    height: 215px;
    font-size: 16px;
}

.size420x348A .search-widget-inner {
    padding: 7px 6px 0 16px;
}

.size420x348A .predefined-destinations-block {
    display: none;
}

.size420x348A .check-in-block,
.size420x348A .check-out-block,
.size420x348A .rooms-block,
.size420x348A .adults-block,
.size420x348A .children-block,
.size420x348A .hotel-chains-block,
.size420x348A .star-rating-block {
    width: 124px;
    padding-right: 20px;
}

.size420x348A .check-in-block input,
.size420x348A .check-out-block input {
    width: 99px;
}

* html .size420x348A {
    width /**/: 420px;
    height /**/: 348px;
}

* html .size420x348A .check-in-block,
* html .size420x348A .check-out-block,
* html .size420x348A .rooms-block,
* html .size420x348A .adults-block,
* html .size420x348A .children-block,
* html .size420x348A .hotel-chains-block,
* html .size420x348A .star-rating-block {
    width /**/: 132px;
}

</style>


    <div class="search-widget size420x348A">
        <div class="search-widget-inner">
            <div class="predefined-destinations-block">
                <label for="predefined-destinations">Where would you like to travel?:</label>
                <ul id="predefined-destinations">
                </ul>
            </div>
                <div class="destination-block">
                    <label for="destination">Where would you like to travel?:</label>
                        <input type="text" class="textbox" id="destination"/>
                        <input type="hidden" id="targetId"/>
                </div>
            <div class="check-in-block">
                <label for="check-in">Check-in:</label>
                <span class="calendar-icon" id="checkinIcon">&nbsp;</span>
                <input type="text" class="textbox" id="check-in"/>
                <div id="check-inDialogContainer" class="yui-skin-sam">
                    <!-- -->
                </div>
            </div>
            <div class="check-out-block">
                <label for="check-out">Check-out:</label>
                <span class="calendar-icon" id="checkoutIcon">&nbsp;</span>
                <input type="text" class="textbox" id="check-out"/>
                <div id="check-outDialogContainer" class="yui-skin-sam">
                    <!-- -->
                </div>
            </div>
            <div class="reset-dates-block">
            </div>
            <div class="rooms-block">
                <label for="rooms"></label>
                <select id="rooms">
                    <option value="1" selected>1 room</option>
                        <option value="2">2 rooms</option>
                        <option value="3">3 rooms</option>
                        <option value="4">4 rooms</option>
                        <option value="5">5 rooms</option>
                        <option value="6">6 rooms</option>
                        <option value="7">7 rooms</option>
                        <option value="8">8 rooms</option>
                    
                </select>
            </div>
            <div class="adults-block">
                <label for="adults" id="adults_label"></label>
                <select id="adults">
                        <option value="1"
                                
                                >1 Person</option>
                        <option value="2"
                                selected="selected"
                                >2 People</option>
                        <option value="3"
                                
                                >3 People</option>
                        <option value="4"
                                
                                >4 People</option>
                </select>
            </div>
            </div>
            <div class="button-block">
                <button type="button" id="search-btn">Explore</button>
            </div>
        </div>
    </div>
    <input type="hidden" id="lang" value="en">
    <input type="hidden" id="currency" value="USD">

<!-- Loads the YUI Loader.  -->

<script src="https://www.travelnow.com/templates/467492/static/16/default/js/yui2/yuiloader/yuiloader-min.js"><!-- --></script>

<!-- Loads the calendar locale. -->
<script src="https://www.travelnow.com/templates/467492/static/16/default/js/locales/locale_en.js"><!-- --></script>

<script type="text/javascript">

// Search Widget implementation.
var SearchWidget = {
    checkin : null,
    checkout : null,

    YAHOO: null,
    yuiLocale: null,

    CHECKIN_ID : "check-in",
    CHECKIN_ICON_ID : "checkinIcon",
    CHECKOUT_ID : "check-out",
    CHECKOUT_ICON_ID : "checkoutIcon",
    RESET_DATES_ID : "reset-dates",
    TARGET_ID : "targetId",
    DESTINATION_ID : "destination",
    PREDEFINED_DESTINATION_ID : "predefinedDestination",
    PREDEFINED_TARGETID_ID : "predefinedTargetId",
    ROOMS_ID : "rooms",
    ADULTS_ID : "adults",
    CHILDREN_ID : "children",
    ADULTS_LABEL_ID : "adults_label",
    CHILDREN_LABEL_ID : "children_label",
    SEARCH_ID : "search-btn",
    HOTEL_CHAINS_ID : "hotel-chains",
    STAR_CATEGORY_ID : "star-rating",
    ROOMS_MAX_COUNT : "maxcount",

    localeCode : "en",

    checkinCalendar : null,
    checkoutCalendar : null,

    checkinCalendarDialog : null,
    checkoutCalendarDialog : null,

    today : new Date(),
    checkInDateSelected: new Date(),
    checkOutDateSelected: new Date(),

    locale: null,

    init : function(YAHOO_LIBRARY_REF) {
        var self = this;
        self.YAHOO = YAHOO_LIBRARY_REF;
        self.loadLocaleFromTemplates();
        self.decorateDatelessCheckbox();
        self.setInitialCheckinCheckoutDates();
        self.decorateCalendars();
        self.decorateDates();
        self.decoratePredefinedDestinations();
        self.decorateRooms();
        self.decorateSearch();
    },

    loadLocaleFromTemplates : function() {
        var self = this;
        if (typeof yuiLocales == "undefined") {
   
            self.YAHOO.log("locale was not loaded. Possible reason - incorrect home url in CP", "error");
            self.locale = {};
            self.locale.calendarLocale = self.YAHOO.util.DateLocale;
        } else {
            self.locale = yuiLocales;
            var dateLocale = null;
            var loadLocale = function(postfix) {
                if (!dateLocale) {
                    self.localeCode = "en" + postfix;
                    dateLocale = yuiLocales.dateLocales[self.localeCode];
                    if (!dateLocale) dateLocale = yuiLocales.calendarLocales[self.localeCode];
                }
            };
 
            loadLocale("");loadLocale("_SA");loadLocale("_CA");loadLocale("_PL");loadLocale("_TW");

            var originDateLocale = self.YAHOO.lang.merge(dateLocale);
            self.locale.calendarLocale = self.locale.calendarLocales[self.localeCode];
        
            self.locale.calendarLocale["DATE_RANGE_DELIMITER"] = "--";
            if (!self.locale.calendarLocale.YEAR_OFFSET) self.locale.calendarLocale.YEAR_OFFSET = 0;



            self.YAHOO.util.DateLocale[self.localeCode] =  self.YAHOO.lang.merge(self.YAHOO.util.DateLocale, dateLocale);
            self.YAHOO.util.DateLocale[self.localeCode + "_origin"] =  self.YAHOO.lang.merge(self.YAHOO.util.DateLocale, originDateLocale);
        }
    },

    updateSavedDates : function() {
        var self = this;
        self.checkin = self.YAHOO.util.Dom.get(self.CHECKIN_ID).value;
        self.checkout = self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value;
    },

    restoreSavedDates : function() {
        var self = this;
        self.YAHOO.util.Dom.get(self.CHECKIN_ID).value = self.checkin;
        self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = self.checkout;
    },

    setCheckinCheckoutDisable : function (value) {
        var self = this;
        self.YAHOO.util.Dom.get(self.CHECKIN_ID).disabled = self.YAHOO.util.Dom.get(self.CHECKOUT_ID).disabled = value;
    },

    decorateDatelessCheckbox : function() {
        var self = this;
        var datelessCheckBox = self.YAHOO.util.Dom.get(self.RESET_DATES_ID);
        if (datelessCheckBox) {
            self.updateSavedDates();
            self.YAHOO.util.Event.on(datelessCheckBox, "click", function() {
                if (datelessCheckBox.checked) { 
                    self.updateSavedDates(); 
                    self.YAHOO.util.Dom.get(self.CHECKIN_ID).value = self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = "";
                   
                    self.setCheckinCheckoutDisable(true);
                } else {
       
                    self.setCheckinCheckoutDisable(false);
                    self.restoreSavedDates();
                }
            })
        }
    },

    addDays : function(date, days) {
        var result = new Date();
        result.setTime(date.getTime() + (1000*3600*24)*days);
        return result;
    },

    formatDate : function(date) {
        var self = this;
        return self.YAHOO.util.Date.format(date, { format: "%x" }, self.localeCode);
    },

    parseDate : function(sDate) {
        var self = this;
        var aDate = sDate.split(self.locale.calendarLocale.DATE_FIELD_DELIMITER);
        var rArray;

        if (aDate.length == 2) {
            rArray = [aDate[self.locale.calendarLocale.MD_MONTH_POSITION-1],aDate[self.locale.calendarLocale.MD_DAY_POSITION-1]];
            rArray.type = self.YAHOO.widget.Calendar.MONTH_DAY;
        } else {
            rArray = [aDate[self.locale.calendarLocale.MDY_YEAR_POSITION-1] - self.locale.calendarLocale.YEAR_OFFSET, aDate[self.locale.calendarLocale.MDY_MONTH_POSITION-1],aDate[self.locale.calendarLocale.MDY_DAY_POSITION-1]];
            rArray.type = self.YAHOO.widget.Calendar.DATE;
        }

        for (var i=0;i<rArray.length;i++) {
            rArray[i] = parseInt(rArray[i], 10);
        }
        return self.YAHOO.widget.DateMath.getDate(rArray[0],(rArray[1]-1),rArray[2])
    },

    setCalendarDate : function(calendar, date) {
        var self = this;
        if (calendar) calendar.select(self.formatDate(date));
    },

    setInitialCheckinCheckoutDates : function() {
        var self = this;
        self.checkInDateSelected = self.addDays(self.today, 3);
        self.checkOutDateSelected = self.addDays(self.checkInDateSelected, 2);
        self.YAHOO.util.Dom.get(self.CHECKIN_ID).value = self.formatDate(self.checkInDateSelected);
        self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = self.formatDate(self.checkOutDateSelected);
    },

    setTargetData : function(destination, targetId) {
        var self = this;
        self.YAHOO.util.Dom.get(self.TARGET_ID).value = targetId;
        self.YAHOO.util.Dom.get(self.DESTINATION_ID).value = destination;
    },

        var destination = self.YAHOO.util.Dom.get(self.DESTINATION_ID);

        self.YAHOO.util.Event.on(destination, "change", function(e) {

            self.setTargetData(destination.value, "");
            for (var i = 0; i < radios.length; i++) {
                if (radios[i].value != destination.value) {
                    if (radios[i].checked) radios[i].checked = false;
                } else { 
                    radios[i].checked = true;
                    self.setTargetData(radios[i].value, radios[i].id);
                    break;
                }
            }
            if (self.YAHOO.util.Dom.get(self.PREDEFINED_DESTINATION_ID) &&
                    self.YAHOO.util.Dom.get(self.PREDEFINED_DESTINATION_ID) == destination.value) {
                self.setTargetData(self.YAHOO.util.Dom.get(self.PREDEFINED_DESTINATION_ID).value,
                                    self.YAHOO.util.Dom.get(self.PREDEFINED_TARGETID_ID).value);
            }

        });
    },
      
    decorateSearch : function() {
        var self = this;

     
        self.YAHOO.util.Event.on(self.YAHOO.util.Dom.get(self.SEARCH_ID), "click", function() {
            var data = {}; 
            var targetId = self.YAHOO.util.Dom.get(self.TARGET_ID);
       
            if (targetId.value) data["targetId"] = targetId.value.split("|")[0] + "|" + targetId.value.split("|")[1];

            var destination = self.YAHOO.util.Dom.get(self.DESTINATION_ID);
            if (destination.value) data["destination"] = destination.value;

            if (self.YAHOO.util.Dom.get(self.RESET_DATES_ID).checked) {
                data["datelessValidating"] = "true";
                data["checkin"] = data["checkout"] = "null";
                data["dateless"] = "true";
            } else { 
                var checkin = self.parseDate(self.YAHOO.util.Dom.get(self.CHECKIN_ID).value);
                var checkout = self.parseDate(self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value);
                data["checkin"] = self.YAHOO.util.Date.format(checkin, { format: "%x" }, self.localeCode + "_origin");
                data["checkout"] = self.YAHOO.util.Date.format(checkout, { format: "%x" }, self.localeCode + "_origin");
            }

            var rooms = self.YAHOO.util.Dom.get(self.ROOMS_ID);
            var children = self.YAHOO.util.Dom.get(self.CHILDREN_ID);
            data["roomsCount"] = rooms.value;
            if (rooms.value == 1) {
       
                data["rooms[0].adultsCount"] = self.YAHOO.util.Dom.get(self.ADULTS_ID).value;
                data["rooms[0].childrenCount"] = children.value;
                for (var q = 0; q < children.value; q++) {
                    data["rooms[0].children[" + q + "].age"] = "7";
                }
            } else {
                for (var i = 0; i < rooms.value; i++) {

                    data["rooms[" + i + "].adultsCount"] = "2";
                    data["rooms[" + i + "].childrenCount"] = "0";
                }
            }

         
            var chains = self.YAHOO.util.Dom.get(self.HOTEL_CHAINS_ID);
            if (chains.selectedIndex) data["filter.hotelName"] = chains.value;

            var stars = self.YAHOO.util.Dom.get(self.STAR_CATEGORY_ID);
            if (stars.selectedIndex) data["filter.starRates"] = stars.value;

            data["lang"] = "en";
            data["currency"] = "USD";

            var url = "https://www.travelnow.com/templates/467492/searchWidget?autosearch=true";
            
            for (var key in data) {
                url += ("&" + key + "=" + encodeURIComponent(data[key]));
            }
            window.open(url,'_newtab');
        });
    },

    decorateDates : function() {
        function isValidDate(d) {
            if ( Object.prototype.toString.call(d) !== "[object Date]" )
                return false;
            return !isNaN(d.getTime());
        }

        var self = this;
        var checkin = self.YAHOO.util.Dom.get(self.CHECKIN_ID);

        self.YAHOO.util.Event.on(checkin, "change", function(e) {
            var date = self.parseDate(checkin.value); 
            if (isValidDate(date) && date != self.checkInDateSelected) {

                self.checkInDateSelected = date;
                self.setCalendarDate(self.checkinCalendar, date);
                if (self.addDays(self.checkOutDateSelected, -1) < self.checkInDateSelected) {
                    self.checkOutDateSelected = self.addDays(self.checkInDateSelected, 1);
                    self.setCalendarDate(self.checkoutCalendar, self.checkOutDateSelected);
                    self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = self.formatDate(self.checkOutDateSelected);
                }
            }
        });

        var checkout = self.YAHOO.util.Dom.get(self.CHECKOUT_ID);
        self.YAHOO.util.Event.on(checkout, "change", function(e) {
            var date = self.parseDate(checkout.value);
            if (isValidDate(date) && date != self.checkOutDateSelected) {

                self.checkOutDateSelected = date;
                self.setCalendarDate(self.checkoutCalendar, date);

                if (self.addDays(self.checkOutDateSelected, -1) < self.checkInDateSelected) {
                    self.checkInDateSelected = self.addDays(self.checkOutDateSelected, -1);
                    self.setCalendarDate(self.checkinCalendar, self.checkInDateSelected);
                    self.YAHOO.util.Dom.get(self.CHECKIN_ID).value = self.formatDate(self.checkInDateSelected);
                }
            }
        })
    },
      
    decorateRooms : function() {
        var self = this;
        var rooms = self.YAHOO.util.Dom.get(self.ROOMS_ID);
        var adults = self.YAHOO.util.Dom.get(self.ADULTS_ID);
        var children = self.YAHOO.util.Dom.get(self.CHILDREN_ID);
        var adultsLabel = self.YAHOO.util.Dom.get(self.ADULTS_LABEL_ID);
        var childrenLabel = self.YAHOO.util.Dom.get(self.CHILDREN_LABEL_ID);

        self.YAHOO.util.Event.on(rooms, "change", function(e) {

            var display = rooms.value == 1 ? "block" : "none";
            self.YAHOO.util.Dom.setStyle(adults, "display", display);
            self.YAHOO.util.Dom.setStyle(children, "display", display);
            self.YAHOO.util.Dom.setStyle(adultsLabel, "display", display);
            self.YAHOO.util.Dom.setStyle(childrenLabel, "display", display);
        });
    },

    decorateCalendars : function() {
        var self = this;
        var showCheckInCalendar = function() {

            var checkIn = self.YAHOO.util.Dom.get(self.CHECKIN_ID);
            var checkInIcon = self.YAHOO.util.Dom.get(self.CHECKIN_ICON_ID);

            self.showCalendar(
                self.CHECKIN_ID,
                {
                    get: function() {return self.checkinCalendarDialog;},
                    set: function(value) {self.checkinCalendarDialog = value;}
                },
                {
                    get: function() {return self.checkinCalendar;},
                    set: function(value) {self.checkinCalendar = value;}
                },

                function (el) {
                     return el != checkIn && !self.YAHOO.util.Dom.isAncestor(checkIn, el) && el != checkInIcon && !self.YAHOO.util.Dom.isAncestor(checkInIcon, el);
                },
                function (date) {
                    self.checkInDateSelected = date;
                    self.YAHOO.util.Dom.get(self.CHECKIN_ID).value = self.formatDate(date);

                    if (self.addDays(self.checkOutDateSelected, -1) < self.checkInDateSelected) {
                        self.checkOutDateSelected = self.addDays(self.checkInDateSelected, 1);
                        self.setCalendarDate(self.checkoutCalendar, self.checkOutDateSelected);
                        self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = self.formatDate(self.checkOutDateSelected);
                    }

                    if (self.checkoutCalendar)
                        self.checkoutCalendar.cfg.setProperty("mindate", self.addDays(self.checkInDateSelected, 1));

                },
                {
                    iframe:true,          // Turn iframe off, since container has iframe support.
                    hide_blank_weeks:true,
                    mindate: self.today,
        start_weekday : 0,
                    initDate : function() {return self.checkInDateSelected;}
                }
            );
        };
        // open checkin calendar on click:

        self.YAHOO.util.Event.on(self.YAHOO.util.Dom.get(self.CHECKIN_ID), "focus", function() {
            showCheckInCalendar();
        });

        self.YAHOO.util.Event.on(self.YAHOO.util.Dom.get(self.CHECKIN_ICON_ID), "click", function() {
            if (!self.YAHOO.util.Dom.get(self.CHECKIN_ID).disabled)
                showCheckInCalendar();
        });


        // see comment for checkin calenar, it is 50% the same.
        var showCheckOutCalendar = function() {

            var checkOut = self.YAHOO.util.Dom.get(self.CHECKOUT_ID);
            var checkOutIcon = self.YAHOO.util.Dom.get(self.CHECKOUT_ICON_ID);

            self.showCalendar(
                self.CHECKOUT_ID,
                {
                    get: function() {return self.checkoutCalendarDialog;},
                    set: function(value) {self.checkoutCalendarDialog = value;}
                },
                {
                    get: function() {return self.checkoutCalendar;},
                    set: function(value) {self.checkoutCalendar = value;}
                },
                function (el) {
                    return el != checkOut && !self.YAHOO.util.Dom.isAncestor(checkOut, el) &&  el != checkOutIcon && !self.YAHOO.util.Dom.isAncestor(checkOutIcon, el);
                },
                function(date) {
                    self.YAHOO.util.Dom.get(self.CHECKOUT_ID).value = self.formatDate(date);
                },
                {
                    iframe:false,          // Turn iframe off, since container has iframe support.
                    hide_blank_weeks:true,
                    mindate: self.addDays(self.checkInDateSelected, 1),
        start_weekday : 0,
                    initDate : function() {return self.checkOutDateSelected;}
                }
            );
        };

        self.YAHOO.util.Event.on(self.YAHOO.util.Dom.get(self.CHECKOUT_ID), "focus", function() {
            showCheckOutCalendar();
        });

        self.YAHOO.util.Event.on(self.YAHOO.util.Dom.get(self.CHECKOUT_ICON_ID), "click", function() {
            if (!self.YAHOO.util.Dom.get(self.CHECKOUT_ID).disabled)
                showCheckOutCalendar();
        });

    },

     // Create calendar.
     // @param containerId id of DOM container for calendar.
     // @param dialogStore get/set object for dialog.
     // @param calendarStore get/set object for calendar.
     // @param shouldHide callback to get info about closing.
     // @param changeCallback callback to call on date selection.
     // @param options calendar init options (according YAHOO UI Calendar widget).
    showCalendar : function(containerId, dialogStore, calendarStore, shouldHide, changeCallback, options)  {
        var self = this;
        // Default CSS style to avoid black text for todays date.
        self.YAHOO.widget.Calendar.STYLES.CSS_CELL_TODAY = "";

        // if no dialog yet - create it.
        if (!dialogStore.get()) {
            dialogStore.set(new self.YAHOO.widget.Dialog(containerId + "Container", {
                visible:false,
                context:["show", "tl", "bl"],
                buttons:[],
                draggable:false,
                close:false
            }));

            // hide dialog if we click anywhere in the document other than the calendar
            self.YAHOO.util.Event.on(document, "click", function(e) {
               var el = self.YAHOO.util.Event.getTarget(e);
               var dialogEl = dialogStore.get().element;                            // call to callback for info
               if (el != dialogEl && !self.YAHOO.util.Dom.isAncestor(dialogEl, el) && shouldHide(el)) {
                   dialogStore.get().hide();
               }
            });

            // inject DOM element for calendar.
            dialogStore.get().setBody('<div id="' + containerId + 'ContainerCalendar"></div>');
            dialogStore.get().render(self.YAHOO.util.Dom.get(containerId + 'DialogContainer'));

            dialogStore.get().showEvent.subscribe(function() {
                if (self.YAHOO.env.ua.ie) {
                    // Since we're hiding the table using yui-overlay-hidden, we
                    // want to let the dialog know that the content size has changed, when shown
                    // .
                    dialogStore.get().fireEvent("changeContent");
                }
            });
        }

        // if there is no calendar yet - create it.
        if (!calendarStore.get()) {

            calendarStore.set(new self.YAHOO.widget.Calendar(containerId + 'ContainerCalendar', options));
            // set week layout based on selected locale.
            for (var key in self.locale.calendarLocale) {
                if (key != 'START_WEEKDAY')
                    calendarStore.get().cfg.setProperty(key, self.locale.calendarLocale[key]);
            }

            calendarStore.get().render();

            // set handler for date selection to call provided callback.
            calendarStore.get().selectEvent.subscribe(function() {
                if (calendarStore.get().getSelectedDates().length > 0) {
                    var selDate = calendarStore.get().getSelectedDates()[0];
                    if (changeCallback) changeCallback(selDate);
                } else {
                    if (changeCallback) changeCallback(null);
                }
                dialogStore.get().hide();
            });

            calendarStore.get().renderEvent.subscribe(function() {
                // tell the dialog its' contents have changed, which allows the
                // container to redraw the underlay (for IE6/Safari2)
                calendarStore.get().fireEvent("changeContent");
            });
            if (options.initDate) self.setCalendarDate(calendarStore.get(), options.initDate());
        }

        var selectedDate = calendarStore.get().getSelectedDates();

        if (selectedDate.length > 0) {
            // Set the pagedate to show the selected date if it exists
            calendarStore.get().cfg.setProperty("pagedate", selectedDate[0]);
            calendarStore.get().render();
        }

        dialogStore.get().show();
    }
};

// Search widget uses the YAHOO UI. In some rare cases it can conflict with another version of YUI. This helps elminate that problem.
// In such case you can do following:
// 1) Try to remove searchWidgetYahooUIloader and replace it with 'SearchWidget.init(YAHOO);' to force using your version of YUI.
// 2) Try to use YAHOO.util.YUILoader with sandbox (see documentation for YUILoader).
// Initiate and configure YUI Loader:
var searchWidgetYahooUIloader = new YAHOO.util.YUILoader({
    // The YUI Loader will automatically identify any additional dependencies required for the specified components.
    // .
    // DataSource required for correct date formating.
    require: ["event", "calendar", "container", "datasource", "selector"],

    // Configures YUI Loader to pull in optional dependencies. 
    // For example, animation is an optional dependency for the slider.
    loadOptional: true,

    // This function is called when all script/css resources have been loaded.
    onSuccess: function() {
        // initalize search widget with loaded YUI reference.
        SearchWidget.init(YAHOO);
    },

    // Configure the Get utility to timeout after 5 seconds for any given node insert
    timeout: 5000,

    // Combine YUI files into a single request (per file type) by using the Yahoo! CDN combo service.
    combine: false,
    // Load compressed version.
    filter: 'min',

    base: 'https://www.travelnow.com/templates/467492/static/16/default/js/yui2/'
//    base: 'https://ajax.googleapis.com/ajax/libs/yui/2.8.1/build/'
});

// Load YUI and start widget.
if (typeof YAHOO == "undefined" || typeof YAHOO.widget == "undefined" || YAHOO.widget.Calendar == "undefined"
        || typeof YAHOO.widget.Dialog == "undefined" || typeof YAHOO.util.Date == "undefined")
    searchWidgetYahooUIloader.insert();
else
    SearchWidget.init(YAHOO);
</script>
